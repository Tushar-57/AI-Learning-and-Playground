spring.application.name=demo

# Mandatory properties:
#langchain4j.open-ai.chat-model.api-key=
openai.api.key=Paste Your key here without quotes, before trying it out -> check 'application.properties' !
#langchain4j.open-ai.chat-model.model-name=gpt-4o
langchain4j.open-ai.chat-model.log-requests=true
langchain4j.open-ai.chat-model.log-responses=true

# ${OPENAI_API_KEY}
# langchain4j.open-ai.chat-model.model-name=gpt-4o-mini

# Optional properties:
# langchain4j.open-ai.chat-model.base-url=...
# langchain4j.open-ai.chat-model.custom-headers=...
# langchain4j.open-ai.chat-model.frequency-penalty=...
# langchain4j.open-ai.chat-model.log-requests=...
# langchain4j.open-ai.chat-model.log-responses=...
# langchain4j.open-ai.chat-model.logit-bias=...
# langchain4j.open-ai.chat-model.max-retries=...
# langchain4j.open-ai.chat-model.max-completion-tokens=...
# langchain4j.open-ai.chat-model.max-tokens=...
# langchain4j.open-ai.chat-model.metadata=...
# langchain4j.open-ai.chat-model.organization-id=...
# langchain4j.open-ai.chat-model.parallel-tool-calls=...
# langchain4j.open-ai.chat-model.presence-penalty=...
# langchain4j.open-ai.chat-model.project-id=...
# langchain4j.open-ai.chat-model.reasoning-effort=...
# langchain4j.open-ai.chat-model.response-format=...
# langchain4j.open-ai.chat-model.seed=...
# langchain4j.open-ai.chat-model.service-tier=...
# langchain4j.open-ai.chat-model.stop=...
# langchain4j.open-ai.chat-model.store=...
# langchain4j.open-ai.chat-model.strict-schema=...
# langchain4j.open-ai.chat-model.strict-tools=...
# langchain4j.open-ai.chat-model.supported-capabilities=...
# langchain4j.open-ai.chat-model.temperature=...
# langchain4j.open-ai.chat-model.timeout=...
# langchain4j.open-ai.chat-model.top-p=
# langchain4j.open-ai.chat-model.user=...